group_by(date) %>%
summarise(steps = sum(steps, na.rm = TRUE)) %>%
arrange(date)
qplot(imputed_df$steps,
geom="histogram",
main="The total imputed number of steps taken each day",
xlab="Number of steps",
ylab = "Frequency",
bin =)
qplot(steps_df2$steps,
geom="histogram",
main="The total imputed number of steps taken each day",
xlab="Number of steps",
ylab = "Frequency",
bin =)
qplot(steps_df2$steps,
geom="histogram",
main="The total imputed number of steps taken each day",
xlab="Number of steps",
ylab = "Frequency",
bin = 5000)
qplot(steps_df2$steps,
geom="histogram",
main="The total imputed number of steps taken each day",
xlab="Number of steps",
ylab = "Frequency",
binwidth = 5000)
meanDaySteps
imputed_df <- df %>% group_by(interval)
View(imputed_df)
View(imputed_df)
View(maxInt)
View(df2)
View(meanIntervalSteps)
View(meanDaySteps)
medianDaySteps <- df %>%
group_by(date) %>%
summarise(median_steps = median(steps, na.rm = TRUE)) %>%
arrange(date)
medianDaySteps %>%
kable(format = "html", col.names = colnames(medianDaySteps)) %>%
kable_styling() %>%
kableExtra::scroll_box(width = "100%", height = "200px")
View(meanDaySteps)
View(meanIntervalSteps)
View(meanDaySteps)
imputed_df <- df %>% group_by(interval) %>%
mutate(steps=ifelse(is.na(steps),
medianDaySteps[medianDaySteps$date==df$date]["steps"],
steps))
imputed_df <- df %>% group_by(interval) %>%
mutate(steps=ifelse(is.na(steps),
medianDaySteps[medianDaySteps$date==df$date]$steps,
steps))
imputed_df <- df %>% group_by(interval) %>%
mutate(steps=ifelse(is.na(steps),
medianDaySteps[medianDaySteps$date==df$date]$steps,
steps))
imputed_df <- df %>% group_by(interval) %>%
mutate(steps=ifelse(is.na(steps),
medianDaySteps[medianDaySteps$date==df$date,],
steps))
merge(df,medianDaySteps,by="date")
imputed_df <- merge(df,medianDaySteps,by="date")
View(imputed_df)
View(meanDaySteps)
View(meanDaySteps)
View(medianDaySteps)
rm(list=ls())
df <- read.csv("activity.csv", header = T, sep = ",")
df$date <- as.Date(as.character(df$date), "%Y-%m-%d")
meanDateSteps <- df %>%
group_by(date) %>%
summarise(mean_steps = mean(steps, na.rm = TRUE )) %>%
arrange(date)
View(meanDateSteps)
imputed_df <- merge(df,meanDateSteps,by="date")
View(meanDateSteps)
View(imputed_df)
meanDateSteps <- df %>%
group_by(date) %>%
summarise(mean_steps = mean(steps, na.rm = TRUE )) %>%
arrange(date)
View(meanDateSteps)
meanDateSteps <- df %>%
group_by(date)
View(meanDateSteps)
meanDateSteps <- df %>%
group_by(date) %>%
summarise(mean_steps = mean(steps, na.rm = TRUE))
View(meanDateSteps)
meanDateSteps <- df %>%
group_by(date) %>%
summarise(funs(mean(., na.rm = TRUE)))
meanDateSteps <- df %>%
group_by(date) %>%
summarise(funs(mean), na.rm = TRUE)
meanDateSteps <- df %>%
group_by(date) %>%
summarise(mean_steps = mean(steps), na.rm = TRUE)
View(meanDateSteps)
View(meanDateSteps)
meanDateSteps <- df %>%
group_by(date) %>%
summarise(mean(steps), na.rm = T)
View(meanDateSteps)
meanDateSteps <- df %>%
group_by(date) %>%
summarise(mean_steps = mean(steps, na.rm=T))
View(imputed_df)
View(meanDateSteps)
meanDateSteps <- df %>%
group_by(date) %>%
summarise(mean_steps = mean(steps, na.rm=TRUE))
View(meanDateSteps)
meanDateSteps <- df[!is.na(df$steps),] %>%
group_by(date) %>%
summarise(mean_steps = mean(steps, na.rm=TRUE))
View(meanDateSteps)
medianDateSteps <- df[!is.na(df$steps),] %>%
group_by(date) %>%
summarise(median_steps = median(steps, na.rm = TRUE)) %>%
arrange(date)
View(meanDateSteps)
View(medianDateSteps)
View(meanDateSteps)
View(df)
View(imputed_df)
View(df)
View(imputed_df)
View(imputed_df)
imputed_df <- df %>%
left_join(meanDateSteps,by="date")
View(imputed_df)
imputed_df <- df %>%
left_join(meanDateSteps,by="date")
View(imputed_df)
meanDateSteps <- df[!is.na(df$steps),] %>%
group_by(date) %>%
summarise(mean_steps = mean(steps, na.rm=TRUE)) %>%
arrange(date)
medianDateSteps <- df[!is.na(df$steps),] %>%
group_by(date) %>%
summarise(median_steps = median(steps, na.rm = TRUE)) %>%
arrange(date)
imputed_df <- df %>%
left_join(meanDateSteps,by="date")
View(imputed_df)
View(meanDateSteps)
View(medianDateSteps)
View(meanDateSteps)
View(medianDateSteps)
View(meanDateSteps)
View(medianDateSteps)
View(meanDateSteps)
View(medianDateSteps)
View(meanDateSteps)
View(medianDateSteps)
View(meanDateSteps)
View(medianDateSteps)
View(imputed_df)
View(meanDateSteps)
View(medianDateSteps)
View(meanDateSteps)
View(df)
View(imputed_df)
imputed_df <- df %>%
left_join(meanDateSteps,by="date") %>%
mutate(steps=ifelse(is.na(steps),
mean_steps,
steps))
View(imputed_df)
steps_df2 <- imputed_df %>%
group_by(date) %>%
summarise(steps = sum(steps, na.rm = TRUE)) %>%
arrange(date)
qplot(steps_df2$steps,
geom="histogram",
main="The total imputed number of steps taken each day",
xlab="Number of steps",
ylab = "Frequency",
binwidth = 5000)
steps_df2 <- imputed_df[!is.na(imputed_df$steps),] %>%
group_by(date) %>%
summarise(steps = sum(steps, na.rm = TRUE)) %>%
arrange(date)
qplot(steps_df2$steps,
geom="histogram",
main="The total imputed number of steps taken each day",
xlab="Number of steps",
ylab = "Frequency",
binwidth = 5000)
View(medianDateSteps)
View(df)
View(df)
weekdays("2012-10-01")
weekdays(as.Date("2012-10-01"))
df <- df %>%
mutate(weekday=ifelse(is.weekend(date),
1,
0))
df <- df %>%
mutate(weekday=ifelse(grepl("S(at|un)", weekdays(date)),
1,
0))
View(df)
df <- df %>%
mutate(weekday=ifelse(grepl("S(at|un)", weekdays(date)),1,0)) %>%
group_by(interval)
View(df)
View(df)
??ggplot
?ggplot
df <- df[!is.na(df$steps),] %>%
mutate(weekday=ifelse(grepl("S(at|un)", weekdays(date)),1,0)) %>%
group_by(interval)
ggplot(df, aes(x = interval,
y  = steps,
group = weekday,
colour = weekday)) +
geom_line() +
labs(x = "Interval",
y = "Number of steps") +
ggtitle("Total emissions from coal combustion-related
sources changed from 1999 to 2008") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
scale_color_brewer(palette="Set1")
ggplot(df, aes(x = interval,
y  = steps,
group = weekday)) +
geom_line() +
labs(x = "Interval",
y = "Number of steps") +
ggtitle("Total emissions from coal combustion-related
sources changed from 1999 to 2008") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
scale_color_brewer(palette="Set1")
ggplot(df, aes(x = interval,
y  = steps,
group = weekday,
color = weekday)) +
geom_line() +
labs(x = "Interval",
y = "Number of steps") +
ggtitle("") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
scale_color_brewer(palette="Set1")
View(df)
ggplot(df, aes(x = interval,
y  = steps,
group = weekday,
color = as.factor(weekday))) +
geom_line() +
labs(x = "Interval",
y = "Number of steps") +
ggtitle("") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
scale_color_brewer(palette="Set1")
ggplot(df, aes(x = interval,
y  = steps,
group = weekday,
color = as.factor(weekday))) +
geom_line() +
labs(x = "Interval",
y = "Number of steps") +
ggtitle("") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
df <- df[!is.na(df$steps),] %>%
mutate(weekday=ifelse(grepl("S(at|un)", weekdays(date)),"Weekend","Weekday")) %>%
group_by(interval)
ggplot(df, aes(x = interval,
y  = steps,
group = weekday,
color = as.factor(weekday))) +
geom_line() +
labs(x = "Interval",
y = "Number of steps") +
ggtitle("") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
scale_color_brewer(palette="Set1")
ggplot(df, aes(x = interval,
group = weekday,
color = as.factor(weekday))) +
geom_line() +
labs(x = "Interval",
y = "Number of steps") +
ggtitle("") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
scale_color_brewer(palette="Set1")
df <- df[!is.na(df$steps),] %>%
mutate(weekday=ifelse(grepl("S(at|un)", weekdays(date)),"Weekend","Weekday")) %>%
group_by(interval)
View(df)
df <- df[!is.na(df$steps),] %>%
mutate(weekday=ifelse(grepl("S(at|un)", weekdays(date)),"Weekend","Weekday")) %>%
select(-date) %>%
group_by(interval)
View(df)
View(imputed_df)
ggplot(df, aes(x = interval,
y  = steps,
group = weekday,
color = as.factor(weekday))) +
geom_line() +
labs(x = "Interval",
y = "Number of steps") +
ggtitle("") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
scale_color_brewer(palette="Set1")
df <- read.csv("activity.csv", header = T, sep = ",")
df$date <- as.Date(as.character(df$date), "%Y-%m-%d")
daylevel <- vector()
for (i in 1:nrow(df)) {
if (day[i] == "Saturday") {
daylevel[i] <- "Weekend"
} else if (day[i] == "Sunday") {
daylevel[i] <- "Weekend"
} else {
daylevel[i] <- "Weekday"
}
}
stepsByDay
daylevel <- vector()
for (i in 1:nrow(df)) {
if (day[i] == "Saturday") {
daylevel[i] <- "Weekend"
} else if (day[i] == "Sunday") {
daylevel[i] <- "Weekend"
} else {
daylevel[i] <- "Weekday"
}
}
View(df)
daylevel <- vector()
for (i in 1:nrow(df)) {
if (weekdays(date[i]) == "Saturday") {
daylevel[i] <- "Weekend"
} else if (weekdays(date[i]) == "Sunday") {
daylevel[i] <- "Weekend"
} else {
daylevel[i] <- "Weekday"
}
}
ggplot(df, aes(x = interval,
y  = steps,
group = weekday,
color = as.factor(weekday))) +
geom_line() +
labs(x = "Interval",
y = "Number of steps") +
ggtitle("")
df <- df[!is.na(df$steps),] %>%
mutate(weekday=ifelse(grepl("S(at|un)", weekdays(date)),"Weekend","Weekday")) %>%
select(-date) %>%
group_by(interval)
ggplot(df, aes(x = interval,
y  = steps,
group = weekday,
color = as.factor(weekday))) +
geom_line()
df <- df[!is.na(df$steps),] %>%
mutate(weekday=ifelse(grepl("S(at|un)", weekdays(date)),"Weekend","Weekday")) %>%
select(-date) %>%
arrange(interval)
df <- df[!is.na(df$steps),] %>%
mutate(weekday=ifelse(grepl("S(at|un)", weekdays(date)),"Weekend","Weekday")) %>%
select(-date)
df <- read.csv("activity.csv", header = T, sep = ",")
df$date <- as.Date(as.character(df$date), "%Y-%m-%d")
df <- df[!is.na(df$steps),] %>%
mutate(weekday=ifelse(grepl("S(at|un)", weekdays(date)),"Weekend","Weekday")) %>%
select(-date) %>%
arrange(interval)
ggplot(df, aes(x = interval,
y  = steps,
group = weekday,
color = as.factor(weekday))) +
geom_line() +
labs(x = "Interval",
y = "Number of steps") +
ggtitle("") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
scale_color_brewer(palette="Set1")
df <- read.csv("activity.csv", header = T, sep = ",")
df$date <- as.Date(as.character(df$date), "%Y-%m-%d")
df <- df[!is.na(df$steps),] %>%
mutate(weekday=ifelse(grepl("S(at|un)", weekdays(date)),"Weekend","Weekday")) %>%
select(-date)
ggplot(df, aes(x = interval,
y  = steps,
group = weekday,
color = as.factor(weekday))) +
geom_line()
df <- read.csv("activity.csv", header = T, sep = ",")
df$date <- as.Date(as.character(df$date), "%Y-%m-%d")
df <- df %>%
mutate(weekday=ifelse(grepl("S(at|un)", weekdays(date)),"Weekend","Weekday")) %>%
select(-date) %>%
arrange(interval)
?arragne
?arragne?arrange
?arrange
View(df)
ggplot(df, aes(x = interval,
y  = steps,
group = weekday,
color = as.factor(weekday))) +
geom_line()
df <- df[!is.na(df$steps),] %>%
mutate(weekday=ifelse(grepl("S(at|un)", weekdays(date)),"Weekend","Weekday")) %>%
select(-date) %>%
group_by(weekday) %>%
summarise(steps = mean(steps, na.rm = TRUE)) %>%
arrange(interval)
df <- df[!is.na(df$steps),] %>%
mutate(weekday=ifelse(grepl("S(at|un)", weekdays(date)),"Weekend","Weekday")) %>%
select(-date) %>%
group_by(weekday) %>%
summarise(steps = sum(steps, na.rm = TRUE)) %>%
arrange(interval)
df <- read.csv("activity.csv", header = T, sep = ",")
df$date <- as.Date(as.character(df$date), "%Y-%m-%d")
df <- df[!is.na(df$steps),] %>%
mutate(weekday=ifelse(grepl("S(at|un)", weekdays(date)),"Weekend","Weekday")) %>%
select(-date) %>%
group_by(weekday) %>%
summarise(steps = mean(steps, na.rm = TRUE)) %>%
arrange(interval)
df <- read.csv("activity.csv", header = T, sep = ",")
df$date <- as.Date(as.character(df$date), "%Y-%m-%d")
df <- df[!is.na(df$steps),] %>%
mutate(weekday=ifelse(grepl("S(at|un)", weekdays(date)),"Weekend","Weekday")) %>%
select(-date) %>%
group_by(weekday) %>%
summarise(steps = mean(steps, na.rm = TRUE))
View(df)
df <- read.csv("activity.csv", header = T, sep = ",")
df$date <- as.Date(as.character(df$date), "%Y-%m-%d")
df <- df[!is.na(df$steps),] %>%
mutate(weekday=ifelse(grepl("S(at|un)", weekdays(date)),"Weekend","Weekday")) %>%
select(-date)
View(df)
df <- df[!is.na(df$steps),] %>%
mutate(weekday=ifelse(grepl("S(at|un)", weekdays(date)),"Weekend","Weekday")) %>%
select(-date) %>%
group_by(weekday, interval) %>%
summarise(steps = mean(steps, na.rm = TRUE)) %>%
arrange(interval)
df <- df[!is.na(df$steps),] %>%
mutate(weekday=ifelse(grepl("S(at|un)", weekdays(date)),"Weekend","Weekday")) %>%
select(-date) %>%
group_by(weekday, interval) %>%
summarise(steps = mean(steps, na.rm = TRUE))
View(df)
df <- read.csv("activity.csv", header = T, sep = ",")
df$date <- as.Date(as.character(df$date), "%Y-%m-%d")
df <- df[!is.na(df$steps),] %>%
mutate(weekday=ifelse(grepl("S(at|un)", weekdays(date)),"Weekend","Weekday")) %>%
select(-date) %>%
group_by(weekday, interval) %>%
summarise(steps = mean(steps, na.rm = TRUE))
View(df)
ggplot(df, aes(x = interval,
y  = steps,
group = weekday,
color = as.factor(weekday))) +
geom_line() +
labs(x = "Interval",
y = "Number of steps") +
ggtitle("") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")) +
scale_color_brewer(palette="Set1")
