values_drop_na = TRUE)
df$Year<-sub("^.", "", as.character(df$Year))
url_data <- "./data/API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
url_metadata <-"./data/Metadata_Country_API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
df <- read.csv(url_data, na.strings=c("NA","#DIV/0!",""), skip=4)
df <- df  %>%
subset(select=-c(Indicator.Name,Indicator.Code, X2020, X)) %>%
pivot_longer(!c(Country.Name,Country.Code), names_to = "Year",
values_to = "BirthRate",
values_drop_na = TRUE)
df$Year<-sub("^.", "", as.character(df$Year))
# Load data
url_data <- "./data/API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
url_metadata <-"./data/Metadata_Country_API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
df <- read.csv(url_data, na.strings=c("NA","#DIV/0!",""), skip=4)
metadata = read.csv(url_metadata,sep=",",
na.strings=c("NA","#DIV/0!",""),
stringsAsFactors = FALSE)
# Medadata preprocessing
metadata <- metadata %>%
merge(df, by="Country.Code") %>%
subset(select=c(Country.Code, Country.Name, Region, IncomeGroup)) %>%
mutate(IncomeGroup = if_else(is.na(IncomeGroup), "Unknown", IncomeGroup))
# Remove missing values
metadata <- metadata[complete.cases(metadata), ]
# Data preprocessing
df <- df  %>%
subset(select=-c(Indicator.Name,Indicator.Code, X2020, X)) %>%
pivot_longer(!c(Country.Name,Country.Code), names_to = "Year",
values_to = "BirthRate",
values_drop_na = TRUE)
df$Year<-sub("^.", "", as.character(df$Year))
rm(url_data,url_metadata)
# Load data
url_data <- "./data/API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
url_metadata <-"./data/Metadata_Country_API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
df <- read.csv(url_data, na.strings=c("NA","#DIV/0!",""), skip=4)
metadata = read.csv(url_metadata,sep=",",
na.strings=c("NA","#DIV/0!",""),
stringsAsFactors = FALSE)
# Medadata preprocessing
metadata <- metadata %>%
merge(df, by="Country.Code") %>%
subset(select=c(Country.Code, Country.Name, Region, IncomeGroup)) %>%
mutate(IncomeGroup = if_else(is.na(IncomeGroup), "Unknown", IncomeGroup))
# Remove missing values
metadata <- metadata[complete.cases(metadata), ]
# Data preprocessing
df <- df  %>%
subset(select=-c(Indicator.Name,Indicator.Code, X2020, X)) %>%
pivot_longer(!c(Country.Name,Country.Code), names_to = "Year",
values_to = "BirthRate",
values_drop_na = TRUE)
df$Year<-sub("^.", "", as.character(df$Year))
rm(url_data,url_metadata)
# Load data
url_data <- "./data/API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
url_metadata <-"./data/Metadata_Country_API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
df <- read.csv(url_data, na.strings=c("NA","#DIV/0!",""), skip=4)
metadata = read.csv(url_metadata,sep=",",
na.strings=c("NA","#DIV/0!",""),
stringsAsFactors = FALSE)
# Medadata preprocessing
metadata <- metadata %>%
merge(df, by="Country.Code") %>%
subset(select=c(Country.Code, Country.Name, Region, IncomeGroup)) %>%
mutate(IncomeGroup = if_else(is.na(IncomeGroup), "Unknown", IncomeGroup))
# Remove missing values
metadata <- metadata[complete.cases(metadata), ]
# Data preprocessing
df <- df  %>%
subset(select=-c(Indicator.Name,Indicator.Code, X2020, X)) %>%
pivot_longer(!c(Country.Name,Country.Code), names_to = "Year",
values_to = "BirthRate",
values_drop_na = TRUE)
df$Year<-sub("^.", "", as.character(df$Year))
rm(url_data,url_metadata)
# Load data
url_data <- "./data/API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
url_metadata <-"./data/Metadata_Country_API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
df <- read.csv(url_data, na.strings=c("NA","#DIV/0!",""), skip=4)
metadata = read.csv(url_metadata,sep=",",
na.strings=c("NA","#DIV/0!",""),
stringsAsFactors = FALSE)
# Medadata preprocessing
metadata <- metadata %>%
merge(df, by="Country.Code") %>%
subset(select=c(Country.Code, Country.Name, Region, IncomeGroup)) %>%
mutate(IncomeGroup = if_else(is.na(IncomeGroup), "Unknown", IncomeGroup))
# Remove missing values
metadata <- metadata[complete.cases(metadata), ]
# Data preprocessing
df <- df  %>%
subset(select=-c(Indicator.Name,Indicator.Code, X2020, X)) %>%
pivot_longer(!c(Country.Name,Country.Code), names_to = "Year",
values_to = "BirthRate",
values_drop_na = TRUE)
df$Year<-sub("^.", "", as.character(df$Year))
rm(url_data,url_metadata)
View(df)
url_data <- "./data/API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
url_metadata <-"./data/Metadata_Country_API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
df <- read.csv(url_data, na.strings=c("NA","#DIV/0!",""), skip=4)
metadata = read.csv(url_metadata,sep=",",
na.strings=c("NA","#DIV/0!",""),
stringsAsFactors = FALSE)
# Medadata preprocessing
metadata <- metadata %>%
merge(df, by="Country.Code") %>%
subset(select=c(Country.Code, Country.Name, Region, IncomeGroup)) %>%
mutate(IncomeGroup = if_else(is.na(IncomeGroup), "Unknown", IncomeGroup))
# Remove missing values
metadata <- metadata[complete.cases(metadata), ]
# Data preprocessing
df <- df  %>%
subset(select=-c(Indicator.Name,Indicator.Code, X2020, X)) %>%
pivot_longer(!Country.Code, names_to = "Year",
values_to = "BirthRate",
values_drop_na = TRUE)
df$Year<-sub("^.", "", as.character(df$Year))
rm(url_data,url_metadata)
# Load data
url_data <- "./data/API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
url_metadata <-"./data/Metadata_Country_API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
df <- read.csv(url_data, na.strings=c("NA","#DIV/0!",""), skip=4)
metadata = read.csv(url_metadata,sep=",",
na.strings=c("NA","#DIV/0!",""),
stringsAsFactors = FALSE)
# Medadata preprocessing
metadata <- metadata %>%
merge(df, by="Country.Code") %>%
subset(select=c(Country.Code, Country.Name, Region, IncomeGroup)) %>%
mutate(IncomeGroup = if_else(is.na(IncomeGroup), "Unknown", IncomeGroup))
# Remove missing values
metadata <- metadata[complete.cases(metadata), ]
# Data preprocessing
df <- df  %>%
subset(select=-c(Indicator.Name,Indicator.Code, X2020, X)) %>%
pivot_longer(!Country.Code, names_to = "Year",
values_to = "BirthRate",
values_drop_na = TRUE)
df$Year<-sub(".", "", as.character(df$Year))
# Load data
url_data <- "./data/API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
url_metadata <-"./data/Metadata_Country_API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
df <- read.csv(url_data, na.strings=c("NA","#DIV/0!",""), skip=4)
metadata = read.csv(url_metadata,sep=",",
na.strings=c("NA","#DIV/0!",""),
stringsAsFactors = FALSE)
# Medadata preprocessing
metadata <- metadata %>%
merge(df, by="Country.Code") %>%
subset(select=c(Country.Code, Country.Name, Region, IncomeGroup)) %>%
mutate(IncomeGroup = if_else(is.na(IncomeGroup), "Unknown", IncomeGroup))
# Remove missing values
metadata <- metadata[complete.cases(metadata), ]
# Data preprocessing
df <- df  %>%
subset(select=-c(Indicator.Name,Indicator.Code, X2020, X)) %>%
pivot_longer(!Country.Code, names_to = "Year",
values_to = "BirthRate",
values_drop_na = TRUE)
df$Year<-sub(".", "", as.character(df$Year))
# Load data
url_data <- "./data/API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
url_metadata <-"./data/Metadata_Country_API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
df <- read.csv(url_data, na.strings=c("NA","#DIV/0!",""), skip=4)
metadata = read.csv(url_metadata,sep=",",
na.strings=c("NA","#DIV/0!",""),
stringsAsFactors = FALSE)
# Medadata preprocessing
metadata <- metadata %>%
merge(df, by="Country.Code") %>%
subset(select=c(Country.Code, Country.Name, Region, IncomeGroup)) %>%
mutate(IncomeGroup = if_else(is.na(IncomeGroup), "Unknown", IncomeGroup))
# Remove missing values
metadata <- metadata[complete.cases(metadata), ]
# Data preprocessing
df <- df  %>%
subset(select=-c(Indicator.Name,Indicator.Code, X2020, X)) %>%
pivot_longer(!Country.Code, names_to = "Year",
values_to = "BirthRate",
values_drop_na = TRUE)
df$Year<-sub(".", "", as.character(df$Year))
# Load data
url_data <- "./data/API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
url_metadata <-"./data/Metadata_Country_API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
df <- read.csv(url_data, na.strings=c("NA","#DIV/0!",""), skip=4)
metadata = read.csv(url_metadata,sep=",",
na.strings=c("NA","#DIV/0!",""),
stringsAsFactors = FALSE)
# Medadata preprocessing
metadata <- metadata %>%
merge(df, by="Country.Code") %>%
subset(select=c(Country.Code, Country.Name, Region, IncomeGroup)) %>%
mutate(IncomeGroup = if_else(is.na(IncomeGroup), "Unknown", IncomeGroup))
# Remove missing values
metadata <- metadata[complete.cases(metadata), ]
# Data preprocessing
df <- df  %>%
subset(select=-c(Country.Name,Indicator.Name,Indicator.Code, X2020, X)) %>%
pivot_longer(!Country.Code, names_to = "Year",
values_to = "BirthRate",
values_drop_na = TRUE)
df$Year<-sub("^.", "", as.character(df$Year))
View(df)
View(metadata)
View(metadata)
View(df)
names(df)
names(metadata)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# Medadata preprocessing
metadata <- metadata %>%
subset(select=c(Country.Code, Region, IncomeGroup)) %>%
mutate(IncomeGroup = if_else(is.na(IncomeGroup), "Unknown", IncomeGroup))
# Remove missing values
metadata <- metadata[complete.cases(metadata), ]
# Load data
url_data <- "./data/API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
url_metadata <-"./data/Metadata_Country_API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
df <- read.csv(url_data, na.strings=c("NA","#DIV/0!",""), skip=4)
metadata = read.csv(url_metadata,sep=",",
na.strings=c("NA","#DIV/0!",""),
stringsAsFactors = FALSE)
# Medadata preprocessing
metadata <- metadata %>%
subset(select=c(Country.Code, Region, IncomeGroup)) %>%
mutate(IncomeGroup = if_else(is.na(IncomeGroup), "Unknown", IncomeGroup))
# Remove missing values
metadata <- metadata[complete.cases(metadata), ]
View(metadata)
# Data preprocessing
df <- df  %>%
subset(select=-c(Indicator.Name,Indicator.Code, X2020, X)) %>%
pivot_longer(!c(Country.Name, Country.Code), names_to = "Year",
values_to = "BirthRate",
values_drop_na = TRUE)
df$Year<-sub("^.", "", as.character(df$Year))
rm(url_data,url_metadata)
View(df)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(metadata)
source('~/Documents/Google_Drive/Workplace-JP/Workspace/R/datasciencecoursera/9DevelopingDataProducts/PA3_BirthRate/Auxillary.R', echo=TRUE)
runApp()
url_data <- "./data/API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
url_metadata <-"./data/Metadata_Country_API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
df <- read.csv(url_data, na.strings=c("NA","#DIV/0!",""), skip=4)
metadata = read.csv(url_metadata,sep=",",
na.strings=c("NA","#DIV/0!",""),
stringsAsFactors = FALSE)
# Medadata preprocessing
metadata <- metadata %>%
subset(select=c(Country.Code, Region, IncomeGroup)) %>%
mutate(IncomeGroup = if_else(is.na(IncomeGroup), "Unknown", IncomeGroup))
# Remove missing values
metadata <- metadata[complete.cases(metadata), ]
# Data preprocessing
df <- df  %>%
subset(select=-c(Indicator.Name,Indicator.Code, X2020, X)) %>%
pivot_longer(!c(Country.Name, Country.Code), names_to = "Year",
values_to = "BirthRate",
values_drop_na = TRUE)
df$Year<-sub("^.", "", as.character(df$Year))
rm(url_data,url_metadata)
View(metadata)
View(metadata)
runApp()
runApp()
View(metadata)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(metadata)
# Load data
url_data <- "./data/API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
url_metadata <-"./data/Metadata_Country_API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
df <- read.csv(url_data, na.strings=c("NA","#DIV/0!",""), skip=4)
metadata = read.csv(url_metadata,sep=",",
na.strings=c("NA","#DIV/0!",""),
stringsAsFactors = FALSE)
# Medadata preprocessing
metadata <- metadata %>%
subset(select=c(Country.Code, Region, IncomeGroup)) %>%
mutate(IncomeGroup = if_else(is.na(IncomeGroup), "Unknown", IncomeGroup))
View(metadata)
runApp()
runApp()
View(metadata)
View(metadata)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(metadata)
View(metadata)
runApp()
runApp()
runApp()
filterRegion <- function(df, target_column, condition_lst)  {
return (df)
}
runApp()
runApp()
View(metadata)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# Load data
url_data <- "./data/API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
url_metadata <-"./data/Metadata_Country_API_SP.DYN.CBRT.IN_DS2_en_csv_v2_2445306.csv"
df <- read.csv(url_data, na.strings=c("NA","#DIV/0!",""), skip=4)
metadata = read.csv(url_metadata,sep=",",
na.strings=c("NA","#DIV/0!",""),
stringsAsFactors = FALSE)
# Medadata preprocessing
metadata <- metadata %>%
subset(select=c(Country.Code, Region, IncomeGroup)) %>%
mutate(IncomeGroup = if_else(is.na(IncomeGroup), "Unknown", IncomeGroup))
# Remove missing values
metadata <- metadata[complete.cases(metadata), ]
# Data preprocessing
df <- df  %>%
subset(select=-c(Indicator.Name,Indicator.Code, X2020, X)) %>%
pivot_longer(!c(Country.Name, Country.Code), names_to = "Year",
values_to = "BirthRate",
values_drop_na = TRUE)
df$Year<-sub("^.", "", as.character(df$Year))
rm(url_data,url_metadata)
View(metadata)
df[df$Country.Name="Maldives",]
df[df$Country.Name=="Maldives",]
unique(metadata$IncomeGroup)
(metadata$IncomeGroup)
unique(metadata$IncomeGroup)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?checkboxGroupInput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?tabsetPanel
runApp()
runApp()
?tabPanel
runApp()
runApp()
?reactiveValues
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?title
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?selectizeInput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
loadData <- function(url_data, url_metadata) {
# Load data
df <- read.csv(url_data, na.strings=c("NA","#DIV/0!",""), skip=4)
metadata = read.csv(url_metadata,sep=",",
na.strings=c("NA","#DIV/0!",""),
stringsAsFactors = FALSE)
# Medadata preprocessing
metadata <- metadata %>%
subset(select=c(Country.Code, Region, IncomeGroup)) %>%
mutate(IncomeGroup = if_else(is.na(IncomeGroup), "Unknown", IncomeGroup))
# Remove missing values
metadata <- metadata[complete.cases(metadata), ]
# Data preprocessing
df <- df  %>%
subset(select=-c(Indicator.Name,Indicator.Code, X2020, X)) %>%
pivot_longer(!c(Country.Name, Country.Code), names_to = "Year",
values_to = "Rate",
values_drop_na = TRUE)
df$Year<-sub("^.", "", as.character(df$Year))
rm(url_data,url_metadata)
return (new("data",
df=df,
metadata=metadata))
}
deathRate <- loadData(url_fertility_data, url_fertility_meta)
deathRate <- loadData(url_fertility_data, url_fertility_meta)
url_fertility_data <- "./data/fertility/API_SP.DYN.TFRT.IN_DS2_en_csv_v2_2449143.csv"
url_fertility_meta <-"./data/fertility/Metadata_Country_API_SP.DYN.TFRT.IN_DS2_en_csv_v2_2449143.csv"
deathRate <- loadData(url_fertility_data, url_fertility_meta)
deathRate <- loadData(url_fertility_data, url_fertility_meta)
runApp()
